[{"/home/dingo/dev/chicken-management/src/index.js":"1","/home/dingo/dev/chicken-management/src/reportWebVitals.js":"2","/home/dingo/dev/chicken-management/src/App.js":"3","/home/dingo/dev/chicken-management/src/store/actions/actionTypes.js":"4","/home/dingo/dev/chicken-management/src/store/reducers/reducer.js":"5","/home/dingo/dev/chicken-management/src/store/reducers/fixedCostReducer.js":"6","/home/dingo/dev/chicken-management/src/store/reducers/variableCostReducer.js":"7","/home/dingo/dev/chicken-management/src/store/actions/fixedCostActions.js":"8","/home/dingo/dev/chicken-management/src/store/actions/variableCostActions.js":"9","/home/dingo/dev/chicken-management/src/store/actions/index.js":"10","/home/dingo/dev/chicken-management/src/components/NavBar/NavBar.js":"11","/home/dingo/dev/chicken-management/src/components/Modal/Modal.js":"12","/home/dingo/dev/chicken-management/src/components/pages/VariableCostsTable/VariableCostsTable.js":"13","/home/dingo/dev/chicken-management/src/components/VariableCostDetail/VariableCostDetail.js":"14","/home/dingo/dev/chicken-management/src/components/TableTools/TableTools.js":"15","/home/dingo/dev/chicken-management/src/utilities/validation.js":"16","/home/dingo/dev/chicken-management/src/components/LoadData/LoadData.js":"17","/home/dingo/dev/chicken-management/src/components/InputField/InputField.js":"18","/home/dingo/dev/chicken-management/src/components/SelectField/SelectField.js":"19","/home/dingo/dev/chicken-management/src/components/pages/RecipesTable/RecipesTable.js":"20","/home/dingo/dev/chicken-management/src/store/reducers/recipeReducer.js":"21","/home/dingo/dev/chicken-management/src/store/actions/recipeActions.js":"22","/home/dingo/dev/chicken-management/src/components/pages/Recipe/Recipe.js":"23","/home/dingo/dev/chicken-management/src/components/VariableCostPicker/VariableCostPicker.js":"24","/home/dingo/dev/chicken-management/src/utilities/calculation.js":"25","/home/dingo/dev/chicken-management/src/components/CheckboxField/CheckboxField.js":"26"},{"size":935,"mtime":1613837378140,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1609730314020,"results":"29","hashOfConfig":"28"},{"size":782,"mtime":1615660799720,"results":"30","hashOfConfig":"28"},{"size":248,"mtime":1615653734420,"results":"31","hashOfConfig":"28"},{"size":326,"mtime":1615653634440,"results":"32","hashOfConfig":"28"},{"size":378,"mtime":1612127278450,"results":"33","hashOfConfig":"28"},{"size":520,"mtime":1614652775020,"results":"34","hashOfConfig":"28"},{"size":168,"mtime":1612137298360,"results":"35","hashOfConfig":"28"},{"size":2641,"mtime":1614745375360,"results":"36","hashOfConfig":"28"},{"size":285,"mtime":1616384148620,"results":"37","hashOfConfig":"28"},{"size":1472,"mtime":1613520914530,"results":"38","hashOfConfig":"28"},{"size":749,"mtime":1612646927190,"results":"39","hashOfConfig":"28"},{"size":2066,"mtime":1615652257140,"results":"40","hashOfConfig":"28"},{"size":7335,"mtime":1615764020053,"results":"41","hashOfConfig":"28"},{"size":571,"mtime":1615765773163,"results":"42","hashOfConfig":"28"},{"size":906,"mtime":1613249771849,"results":"43","hashOfConfig":"28"},{"size":605,"mtime":1615655048520,"results":"44","hashOfConfig":"28"},{"size":2343,"mtime":1616640459650,"results":"45","hashOfConfig":"28"},{"size":2357,"mtime":1616640450680,"results":"46","hashOfConfig":"28"},{"size":1516,"mtime":1616819777530,"results":"47","hashOfConfig":"28"},{"size":502,"mtime":1615653581240,"results":"48","hashOfConfig":"28"},{"size":2741,"mtime":1616890972180,"results":"49","hashOfConfig":"28"},{"size":9828,"mtime":1617075183060,"results":"50","hashOfConfig":"28"},{"size":6157,"mtime":1617075326220,"results":"51","hashOfConfig":"28"},{"size":742,"mtime":1616280385640,"results":"52","hashOfConfig":"28"},{"size":429,"mtime":1616817511340,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1uyqhfw",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/home/dingo/dev/chicken-management/src/index.js",[],["111","112"],"/home/dingo/dev/chicken-management/src/reportWebVitals.js",[],"/home/dingo/dev/chicken-management/src/App.js",[],"/home/dingo/dev/chicken-management/src/store/actions/actionTypes.js",[],"/home/dingo/dev/chicken-management/src/store/reducers/reducer.js",[],"/home/dingo/dev/chicken-management/src/store/reducers/fixedCostReducer.js",[],"/home/dingo/dev/chicken-management/src/store/reducers/variableCostReducer.js",[],"/home/dingo/dev/chicken-management/src/store/actions/fixedCostActions.js",[],"/home/dingo/dev/chicken-management/src/store/actions/variableCostActions.js",[],"/home/dingo/dev/chicken-management/src/store/actions/index.js",[],"/home/dingo/dev/chicken-management/src/components/NavBar/NavBar.js",[],"/home/dingo/dev/chicken-management/src/components/Modal/Modal.js",[],"/home/dingo/dev/chicken-management/src/components/pages/VariableCostsTable/VariableCostsTable.js",[],"/home/dingo/dev/chicken-management/src/components/VariableCostDetail/VariableCostDetail.js",["113"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../store/actions\";\nimport classes from \"./VariableCostDetail.module.css\";\nimport close_icon from \"../../img/close_icon.svg\";\nimport { types, units } from \"../../config/units.json\";\nimport InputField from \"../InputField/InputField\";\nimport SelectField from \"../SelectField/SelectField\";\n\nfunction VariableCostDetail(props) {\n  const [isEdit, setIsEdit] = useState(false);\n  const [isNew, setIsNew] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [isAdvanced, setIsAdvanced] = useState(false);\n  const [availableUnits, setAvailableUnits] = useState([]);\n  const [detail, setDetail] = useState({\n    id: \"0\",\n    description: \"\",\n    unitType: \"\",\n    unitSymbol: \"\",\n    cost: 0,\n  });\n  const [validationErrors, setValidationErrors] = useState({\n    description: false,\n    unitType: false,\n    unitSymbol: false,\n    cost: false,\n  });\n  const [isSaving, setIsSaving] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const isMounted = useRef(false);\n  const isFirstChange = useRef(true);\n\n  const getAvailableUnits = useCallback(() => {\n    let newAvailableUnits = [];\n    units.forEach((unit) => {\n      if (unit.type === detail.unitType) {\n        newAvailableUnits.push(unit.symbol);\n      }\n    });\n    setAvailableUnits(newAvailableUnits);\n  }, [detail.unitType]);\n\n  const onChange = (e) => {\n    setDetail({\n      ...detail,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onValidation = (name, value) => {\n    setValidationErrors({\n      ...validationErrors,\n      [name]: value,\n    });\n  };\n\n  const save = () => {\n    setIsSaving(true);\n    isNew ? _create() : _update();\n  };\n\n  const _create = async () => {\n    const res = await props.actCreateVariableCost(detail);\n    if (res.status >= 200 && res.status < 300) {\n      props.closeModal();\n    } else {\n      setIsSaving(false);\n    }\n  };\n\n  const _update = async () => {\n    const res = await props.actUpdateVariableCost({\n      detail,\n      costs: props.costs,\n    });\n    if (res.status >= 200 && res.status < 300) {\n      props.closeModal();\n    } else {\n      setIsSaving(false);\n    }\n  };\n\n  const _delete = async () => {\n    if (!isDeleting) {\n      setIsDeleting(true);\n      const res = await props.actDeleteVariableCost({\n        id: detail.id,\n        costs: props.costs,\n      });\n      if (res.status >= 200 && res.status < 300) {\n        props.closeModal();\n      } else {\n        setIsDeleting(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (props.data) {\n      setDetail({ ...props.data });\n    } else {\n      setIsEdit(true);\n      setIsNew(true);\n      setValidationErrors({\n        description: true,\n        unitType: true,\n        unitSymbol: true,\n      });\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (isMounted.current) {\n      getAvailableUnits();\n      if (!isFirstChange.current) {\n        setDetail({\n          ...detail,\n          unitSymbol: \"\",\n        });\n      }\n      isFirstChange.current = false;\n    }\n  }, [detail.unitType, getAvailableUnits]);\n\n  useEffect(() => {\n    const { description, unitType, unitSymbol, cost } = validationErrors;\n    setIsFormValid(!(description || unitType || unitSymbol || cost));\n    isMounted.current = true;\n  }, [validationErrors]);\n\n  return (\n    <div className={classes.VariableCostDetail}>\n      <form>\n        <div className={classes.closeBtn}>\n          <img\n            alt=\"close\"\n            src={close_icon}\n            className={classes.closeIcon}\n            onClick={props.closeModal}\n          />\n        </div>\n        <div className={classes.idField}>\n          <h2>Id: {detail.id}</h2>\n        </div>\n        <div className={classes.descField}>\n          <InputField\n            label=\"Descripción\"\n            name=\"description\"\n            disabled={!isEdit}\n            value={detail.description}\n            minLength=\"0\"\n            maxLength=\"30\"\n            validations={[\"isNotEmpty\", \"isString\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </div>\n        <div className={classes.typeField}>\n          <SelectField\n            label=\"Medida\"\n            name=\"unitType\"\n            disabled={!isEdit}\n            value={detail.unitType}\n            options={types}\n            validations={[\"isNotEmpty\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </div>\n        <div className={classes.unitField}>\n          <SelectField\n            label=\"Unidad\"\n            name=\"unitSymbol\"\n            disabled={!isEdit}\n            value={detail.unitSymbol}\n            options={availableUnits}\n            validations={[\"isNotEmpty\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </div>\n        <div className={classes.costField}>\n          <InputField\n            type=\"number\"\n            label=\"Costo\"\n            name=\"cost\"\n            disabled={!isEdit}\n            value={detail.cost}\n            min={0}\n            validations={[\"isNumber\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </div>\n\n        {isEdit ? (\n          <React.Fragment>\n            <div className={classes.btnArea}>\n              <button\n                type=\"button\"\n                className=\"btn-success\"\n                onClick={save}\n                disabled={!isFormValid || isSaving}\n              >\n                {isSaving ? \"Guardando...\" : \"Guardar\"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn-danger\"\n                onClick={() => props.closeModal()}\n              >\n                Cancelar\n              </button>\n            </div>\n            {!isNew ? (\n              <div className={classes.advancedArea}>\n                <p\n                  className={classes.advancedBtn}\n                  onClick={() => setIsAdvanced(!isAdvanced)}\n                >\n                  opciones avanzadas\n                </p>\n                {isAdvanced ? (\n                  <p className={classes.deleteBtn} onClick={_delete}>\n                    Eliminar\n                  </p>\n                ) : null}\n              </div>\n            ) : null}\n          </React.Fragment>\n        ) : (\n          <div className={classes.btnArea}>\n            <button\n              type=\"button\"\n              className={`btn-info ${classes.btnEdit}`}\n              onClick={() => setIsEdit(true)}\n            >\n              Editar\n            </button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    costs: state.variableCostReducer.costs,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actCreateVariableCost: (payload) =>\n      dispatch(actionCreators.createVariableCost(payload)),\n    actUpdateVariableCost: (payload) =>\n      dispatch(actionCreators.updateVariableCost(payload)),\n    actDeleteVariableCost: (payload) =>\n      dispatch(actionCreators.deleteVariableCost(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VariableCostDetail);\n","/home/dingo/dev/chicken-management/src/components/TableTools/TableTools.js",[],"/home/dingo/dev/chicken-management/src/utilities/validation.js",[],"/home/dingo/dev/chicken-management/src/components/LoadData/LoadData.js",["114","115"],"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../store/actions\";\n\nfunction LoadData(props) {\n  useEffect(() => {\n    props.actReadVariableCosts();\n    props.actReadRecipes()\n  }, []);\n\n  return null;\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actReadVariableCosts: () => dispatch(actionCreators.readVariableCosts()),\n    actReadRecipes: () => dispatch(actionCreators.readRecipes())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoadData);\n","/home/dingo/dev/chicken-management/src/components/InputField/InputField.js",["116"],"import classes from \"./InputField.module.css\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport * as validate from \"../../utilities/validation\";\n\nexport default function InputField({\n  showLabel = true,\n  label = \"\",\n  type = \"text\",\n  name,\n  placeholder,\n  disabled = false,\n  autoComplete = \"off\",\n  minLength = -1,\n  maxLength = Infinity,\n  min = -Infinity,\n  max = Infinity,\n  value,\n  validations = [],\n  onChange,\n  onValidation,\n}) {\n  const [validationErrors, setValidationErrors] = useState([]);\n  const prevValue = useRef(\"\");\n\n  const onChangeHandler = (e) => {\n    onChange(e);\n  };\n\n  const validateErrors = useCallback(() => {\n    let errors = [];\n    let filteredErrors = [];\n    validations.forEach((validation) => {\n      switch (validation) {\n        case \"isString\":\n          errors = [\n            ...errors,\n            validate[validation](value, minLength, maxLength),\n          ];\n          break;\n\n        case \"isNumber\":\n          errors = [...errors, validate[validation](value, min, max)];\n          break;\n\n        default:\n          errors = [...errors, validate[validation](value)];\n          break;\n      }\n    });\n    filteredErrors = errors.filter((err) => err.length > 0);\n    setValidationErrors(filteredErrors);\n  }, [validations, value, minLength, maxLength, min, max]);\n\n  useEffect(() => {\n    if (value !== prevValue.current) {\n      validateErrors();\n    }\n    prevValue.current = value;\n  }, [value, validateErrors]);\n\n  useEffect(() => {\n    if (validationErrors.length > 0) {\n      onValidation(name, true);\n    } else {\n      onValidation(name, false);\n    }\n  }, [validationErrors, name]);\n\n  return (\n    <div>\n      {showLabel ? (\n        <React.Fragment>\n          <label>{label}</label>\n          <br />\n        </React.Fragment>\n      ) : null}\n      <input\n        type={type}\n        name={name}\n        minLength={minLength}\n        maxLength={maxLength}\n        min={min}\n        max={max}\n        value={value}\n        onChange={onChangeHandler}\n        disabled={disabled}\n        placeholder={placeholder}\n        autoComplete={autoComplete}\n        className={classes.inputField}\n      />\n      {validationErrors.map((error, index) => (\n        <p key={index} className=\"field-error-text\">\n          {error}\n        </p>\n      ))}\n    </div>\n  );\n}\n","/home/dingo/dev/chicken-management/src/components/SelectField/SelectField.js",["117"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport classes from \"./SelectField.module.css\";\nimport * as validate from \"../../utilities/validation\";\n\nexport default function SelectField({\n  showLabel = true,\n  label = \"\",\n  name,\n  disabled = false,\n  options = [],\n  size = 1,\n  min = -Infinity,\n  max = Infinity,\n  minLength = -1,\n  maxLength = Infinity,\n  value,\n  validations = [],\n  onChange,\n  onValidation,\n}) {\n  const [validationErrors, setValidationErrors] = useState([]);\n  const prevValue = useRef(\"\");\n\n  const onChangeHandler = (e) => {\n    onChange(e);\n  };\n\n  const validateErrors = useCallback(() => {\n    let errors = [];\n    let filteredErrors = [];\n    validations.forEach((validation) => {\n      switch (validation) {\n        case \"isString\":\n          errors = [\n            ...errors,\n            validate[validation](value, minLength, maxLength),\n          ];\n          break;\n\n        case \"isNumber\":\n          errors = [...errors, validate[validation](value, min, max)];\n          break;\n\n        default:\n          errors = [...errors, validate[validation](value)];\n          break;\n      }\n    });\n    filteredErrors = errors.filter((err) => err.length > 0);\n    setValidationErrors(filteredErrors);\n  }, [validations, value, minLength, maxLength, min, max]);\n\n  useEffect(() => {\n    if (value !== prevValue.current) {\n      validateErrors();\n    }\n    prevValue.current = value;\n  }, [value, validateErrors]);\n\n  useEffect(() => {\n    if (validationErrors.length > 0) {\n      onValidation(name, true);\n    } else {\n      onValidation(name, false);\n    }\n  }, [validationErrors, name]);\n\n  return (\n    <div>\n      {showLabel ? (\n        <React.Fragment>\n          <label>{label}</label>\n          <br />\n        </React.Fragment>\n      ) : null}\n      <select\n        name={name}\n        value={value}\n        size={size}\n        onChange={onChangeHandler}\n        disabled={disabled}\n        className={classes.selectField}\n      >\n        <option value=\"\">seleccione...</option>\n        {options.map((option, index) => (\n          <option key={index} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n      {validationErrors.map((error, index) => (\n        <p key={index} className=\"field-error-text\">\n          {error}\n        </p>\n      ))}\n    </div>\n  );\n}\n","/home/dingo/dev/chicken-management/src/components/pages/RecipesTable/RecipesTable.js",[],"/home/dingo/dev/chicken-management/src/store/reducers/recipeReducer.js",[],"/home/dingo/dev/chicken-management/src/store/actions/recipeActions.js",[],"/home/dingo/dev/chicken-management/src/components/pages/Recipe/Recipe.js",["118","119"],"/home/dingo/dev/chicken-management/src/components/VariableCostPicker/VariableCostPicker.js",["120","121","122"],"/home/dingo/dev/chicken-management/src/utilities/calculation.js",[],"/home/dingo/dev/chicken-management/src/components/CheckboxField/CheckboxField.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":124,"column":6,"nodeType":"129","endLine":124,"endColumn":42,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"135","line":9,"column":6,"nodeType":"129","endLine":9,"endColumn":8,"suggestions":"136"},{"ruleId":"127","severity":1,"message":"137","line":67,"column":6,"nodeType":"129","endLine":67,"endColumn":30,"suggestions":"138"},{"ruleId":"127","severity":1,"message":"137","line":66,"column":6,"nodeType":"129","endLine":66,"endColumn":30,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":67,"column":52,"nodeType":"142","messageId":"143","endLine":67,"endColumn":54},{"ruleId":"127","severity":1,"message":"144","line":158,"column":6,"nodeType":"129","endLine":158,"endColumn":49,"suggestions":"145"},{"ruleId":"127","severity":1,"message":"146","line":81,"column":6,"nodeType":"129","endLine":81,"endColumn":8,"suggestions":"147"},{"ruleId":"127","severity":1,"message":"148","line":92,"column":6,"nodeType":"129","endLine":92,"endColumn":33,"suggestions":"149"},{"ruleId":"127","severity":1,"message":"144","line":99,"column":6,"nodeType":"129","endLine":99,"endColumn":30,"suggestions":"150"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'detail'. Either include it or remove the dependency array. You can also do a functional update 'setDetail(d => ...)' if you only need 'detail' in the 'setDetail' call.","ArrayExpression",["153"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["154"],"React Hook useEffect has a missing dependency: 'onValidation'. Either include it or remove the dependency array. If 'onValidation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["155"],["156"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.variableCosts'. Either include it or remove the dependency array.",["157"],"React Hook useEffect has missing dependencies: 'fieldsData', 'props.data', and 'props.variableCosts'. Either include them or remove the dependency array. You can also do a functional update 'setFieldsData(f => ...)' if you only need 'fieldsData' in the 'setFieldsData' call.",["158"],"React Hook useEffect has a missing dependency: 'noFilteredCostsNames'. Either include it or remove the dependency array.",["159"],["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [detail, detail.unitType, getAvailableUnits]",{"range":"176","text":"177"},"Update the dependencies array to be: [props]",{"range":"178","text":"179"},"Update the dependencies array to be: [validationErrors, name, onValidation]",{"range":"180","text":"181"},{"range":"182","text":"181"},"Update the dependencies array to be: [costsData, costsUnitSymbol, costsQuantity, props.variableCosts]",{"range":"183","text":"184"},"Update the dependencies array to be: [fieldsData, props.data, props.variableCosts]",{"range":"185","text":"186"},"Update the dependencies array to be: [fieldsData.filterCriteria, noFilteredCostsNames]",{"range":"187","text":"188"},"Update the dependencies array to be: [fieldsData.description, props.variableCosts]",{"range":"189","text":"190"},[3194,3230],"[detail, detail.unitType, getAvailableUnits]",[250,252],"[props]",[1644,1668],"[validationErrors, name, onValidation]",[1618,1642],[4769,4812],"[costsData, costsUnitSymbol, costsQuantity, props.variableCosts]",[2307,2309],"[fieldsData, props.data, props.variableCosts]",[2613,2640],"[fieldsData.filterCriteria, noFilteredCostsNames]",[2822,2846],"[fieldsData.description, props.variableCosts]"]