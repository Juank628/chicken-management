[{"/home/juanca/dev/chicken-management/src/index.js":"1","/home/juanca/dev/chicken-management/src/reportWebVitals.js":"2","/home/juanca/dev/chicken-management/src/App.js":"3","/home/juanca/dev/chicken-management/src/store/reducers/reducer.js":"4","/home/juanca/dev/chicken-management/src/components/LoadData/LoadData.js":"5","/home/juanca/dev/chicken-management/src/components/NavBar/NavBar.js":"6","/home/juanca/dev/chicken-management/src/components/pages/Home/Home.js":"7","/home/juanca/dev/chicken-management/src/components/pages/RecipesTable/RecipesTable.js":"8","/home/juanca/dev/chicken-management/src/components/pages/VariableCostsTable/VariableCostsTable.js":"9","/home/juanca/dev/chicken-management/src/components/pages/OrdersTable/OrdersTable.js":"10","/home/juanca/dev/chicken-management/src/components/pages/Recipe/Recipe.js":"11","/home/juanca/dev/chicken-management/src/components/pages/Order/Order.js":"12","/home/juanca/dev/chicken-management/src/store/reducers/fixedCostReducer.js":"13","/home/juanca/dev/chicken-management/src/store/reducers/variableCostReducer.js":"14","/home/juanca/dev/chicken-management/src/store/reducers/recipeReducer.js":"15","/home/juanca/dev/chicken-management/src/store/reducers/orderReducer.js":"16","/home/juanca/dev/chicken-management/src/store/actions/actionTypes.js":"17","/home/juanca/dev/chicken-management/src/components/HomeItem/HomeItem.js":"18","/home/juanca/dev/chicken-management/src/components/TableTools/TableTools.js":"19","/home/juanca/dev/chicken-management/src/components/Modal/Modal.js":"20","/home/juanca/dev/chicken-management/src/components/VariableCostDetail/VariableCostDetail.js":"21","/home/juanca/dev/chicken-management/src/components/OrderStatusBar/OrderStatusBar.js":"22","/home/juanca/dev/chicken-management/src/utilities/calculation.js":"23","/home/juanca/dev/chicken-management/src/components/InputField/InputField.js":"24","/home/juanca/dev/chicken-management/src/components/SelectField/SelectField.js":"25","/home/juanca/dev/chicken-management/src/components/CheckboxField/CheckboxField.js":"26","/home/juanca/dev/chicken-management/src/components/RecipePicker/RecipePicker.js":"27","/home/juanca/dev/chicken-management/src/components/VariableCostPicker/VariableCostPicker.js":"28","/home/juanca/dev/chicken-management/src/store/actions/index.js":"29","/home/juanca/dev/chicken-management/src/utilities/validation.js":"30","/home/juanca/dev/chicken-management/src/store/actions/fixedCostActions.js":"31","/home/juanca/dev/chicken-management/src/store/actions/variableCostActions.js":"32","/home/juanca/dev/chicken-management/src/store/actions/recipeActions.js":"33","/home/juanca/dev/chicken-management/src/store/actions/orderActions.js":"34"},{"size":935,"mtime":1655343906030,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1655343906030,"results":"37","hashOfConfig":"36"},{"size":1139,"mtime":1655343906020,"results":"38","hashOfConfig":"36"},{"size":384,"mtime":1655343906030,"results":"39","hashOfConfig":"36"},{"size":605,"mtime":1655343906020,"results":"40","hashOfConfig":"36"},{"size":470,"mtime":1655343906030,"results":"41","hashOfConfig":"36"},{"size":678,"mtime":1655343906030,"results":"42","hashOfConfig":"36"},{"size":2697,"mtime":1655343906030,"results":"43","hashOfConfig":"36"},{"size":2066,"mtime":1655343906030,"results":"44","hashOfConfig":"36"},{"size":1767,"mtime":1655437654170,"results":"45","hashOfConfig":"36"},{"size":13499,"mtime":1655343906030,"results":"46","hashOfConfig":"36"},{"size":6742,"mtime":1655512753740,"results":"47","hashOfConfig":"36"},{"size":378,"mtime":1655343906030,"results":"48","hashOfConfig":"36"},{"size":520,"mtime":1655343906030,"results":"49","hashOfConfig":"36"},{"size":502,"mtime":1655343906030,"results":"50","hashOfConfig":"36"},{"size":489,"mtime":1655343906030,"results":"51","hashOfConfig":"36"},{"size":336,"mtime":1655343906030,"results":"52","hashOfConfig":"36"},{"size":365,"mtime":1655343906020,"results":"53","hashOfConfig":"36"},{"size":571,"mtime":1655343906030,"results":"54","hashOfConfig":"36"},{"size":749,"mtime":1655343906020,"results":"55","hashOfConfig":"36"},{"size":7735,"mtime":1655346068890,"results":"56","hashOfConfig":"36"},{"size":1204,"mtime":1655343906030,"results":"57","hashOfConfig":"36"},{"size":1701,"mtime":1655343906030,"results":"58","hashOfConfig":"36"},{"size":2343,"mtime":1655343906020,"results":"59","hashOfConfig":"36"},{"size":2453,"mtime":1655343906030,"results":"60","hashOfConfig":"36"},{"size":472,"mtime":1655343906020,"results":"61","hashOfConfig":"36"},{"size":2583,"mtime":1656209268370,"results":"62","hashOfConfig":"36"},{"size":7059,"mtime":1655343906030,"results":"63","hashOfConfig":"36"},{"size":377,"mtime":1655343906030,"results":"64","hashOfConfig":"36"},{"size":906,"mtime":1655343906030,"results":"65","hashOfConfig":"36"},{"size":168,"mtime":1655343906030,"results":"66","hashOfConfig":"36"},{"size":2702,"mtime":1655343906030,"results":"67","hashOfConfig":"36"},{"size":2647,"mtime":1655343906030,"results":"68","hashOfConfig":"36"},{"size":1118,"mtime":1655343906030,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1fw04xb",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/home/juanca/dev/chicken-management/src/index.js",[],["152","153"],"/home/juanca/dev/chicken-management/src/reportWebVitals.js",[],"/home/juanca/dev/chicken-management/src/App.js",[],"/home/juanca/dev/chicken-management/src/store/reducers/reducer.js",[],"/home/juanca/dev/chicken-management/src/components/LoadData/LoadData.js",["154","155"],"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../store/actions\";\n\nfunction LoadData(props) {\n  useEffect(() => {\n    props.actReadVariableCosts();\n    props.actReadRecipes()\n  }, []);\n\n  return null;\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actReadVariableCosts: () => dispatch(actionCreators.readVariableCosts()),\n    actReadRecipes: () => dispatch(actionCreators.readRecipes())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoadData);\n","/home/juanca/dev/chicken-management/src/components/NavBar/NavBar.js",[],"/home/juanca/dev/chicken-management/src/components/pages/Home/Home.js",[],"/home/juanca/dev/chicken-management/src/components/pages/RecipesTable/RecipesTable.js",["156"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./RecipesTable.module.css\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { calculateRecipeCost } from \"../../../utilities/calculation\";\nimport TableTools from \"../../TableTools/TableTools\";\n\nfunction RecipesTable(props) {\n  const history = useHistory();\n  const [costsAndProfits, setCostsAndProfits] = useState([]);\n\n  const openRecipe = (e) => {\n    const recipeId = e.currentTarget.id || \"new\";\n    history.push(`/recipe/${recipeId}`);\n  };\n\n  const getCost = (index) => {\n    if (costsAndProfits[index]) {\n      return costsAndProfits[index].totalCost;\n    }\n    return \"not available\";\n  };\n\n  const getProfit = (index) => {\n    if (costsAndProfits[index]) {\n      return costsAndProfits[index].profit;\n    }\n    return \"not available\";\n  };\n\n  const getProfitPercent = (index) => {\n    if (costsAndProfits[index]) {\n      return costsAndProfits[index].profitPercent;\n    }\n    return \"not available\";\n  };\n\n  const calculateCostsAndProfits = useCallback(() => {\n    const results = [];\n    props.recipes.forEach((recipe) =>\n      results.push(calculateRecipeCost(props.recipes, recipe.id))\n    );\n    setCostsAndProfits(results);\n  }, [props.recipes]);\n\n  useEffect(() => {\n    calculateCostsAndProfits();\n  }, []);\n\n  return (\n    <div className={classes.RecipeTable}>\n      <TableTools openAddModal={openRecipe} />\n      <table>\n        <thead>\n          <tr className=\"table-header\">\n            <th className={classes.id}>id</th>\n            <th className={classes.desc}>Descripcion</th>\n            <th className={classes.family}>Familia</th>\n            <th className={classes.cost}>Costo</th>\n            <th className={classes.price}>Precio</th>\n            <th className={classes.profitAmount}>Ganancia S/</th>\n            <th className={classes.profitPercent}>Ganancia %</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.recipes.map((recipe, index) => (\n            <tr key={recipe.id} id={recipe.id} onClick={openRecipe}>\n              <td>{recipe.id}</td>\n              <td>{recipe.description}</td>\n              <td>{recipe.family}</td>\n              <td>{getCost(index)}</td>\n              <td>{recipe.price}</td>\n              <td>{getProfit(index)}</td>\n              <td>{getProfitPercent(index)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipeReducer.recipes,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipesTable);\n","/home/juanca/dev/chicken-management/src/components/pages/VariableCostsTable/VariableCostsTable.js",["157"],"import React, { useState, useEffect } from \"react\";\nimport \"./VariableCostsTable.css\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../../store/actions\";\nimport Modal from \"../../Modal/Modal\";\nimport VariableCostDetail from \"../../VariableCostDetail/VariableCostDetail\";\nimport TableTools from \"../../TableTools/TableTools\";\n\nfunction VariableCostsTable(props) {\n  const [showModal, setShowModal] = useState(false);\n  const [selectedItem, setSelectedItem] = useState({});\n\n  const openModal = (isNew) => (e) => {\n    if (isNew) {\n      setSelectedItem(null);\n    } else {\n      const item = props.variableCosts.find(\n        (item) => item.id === parseInt(e.currentTarget.id)\n      );\n      setSelectedItem(item);\n    }\n    setShowModal(true);\n  };\n\n  return (\n    <div className=\"VariableCostTable\">\n      <TableTools openAddModal={openModal(true)} />\n      <table>\n        <thead>\n          <tr className=\"table-header\">\n            <th className=\"id\">id</th>\n            <th className=\"desc\">Descripcion</th>\n            <th className=\"unit\">Unidad</th>\n            <th className=\"cost\">Costo</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.variableCosts.map((item) => (\n            <tr key={item.id} id={item.id} onClick={openModal(false)}>\n              <td>{item.id}</td>\n              <td>{item.description}</td>\n              <td>{item.unitSymbol}</td>\n              <td>{item.cost}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <Modal show={showModal} closeModal={() => setShowModal(false)}>\n        <VariableCostDetail\n          closeModal={() => setShowModal(false)}\n          data={selectedItem}\n        />\n      </Modal>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    variableCosts: state.variableCostReducer.costs,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actReadVariableCosts: () => dispatch(actionCreators.readVariableCosts()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VariableCostsTable);\n","/home/juanca/dev/chicken-management/src/components/pages/OrdersTable/OrdersTable.js",["158","159"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as actionCreators from \"../../../store/actions\";\nimport classes from \"./OrdersTable.module.css\";\nimport TableTools from \"../../TableTools/TableTools\";\nimport OrderStatusBar from \"../../OrderStatusBar/OrderStatusBar\";\n\nfunction OrdersTable(props) {\n  const history = useHistory();\n\n  const openOrder = (e) => {\n    const orderId = e.currentTarget.id || \"new\"\n    history.push(`/order/${orderId}`);\n  };\n\n  useEffect(() => {\n    props.actReadOrders();\n  }, []);\n\n  return (\n    <div className={classes.OrdersTable}>\n      <TableTools openAddModal={openOrder} />\n      <table>\n        <thead>\n          <tr className=\"table-header\">\n            <th className={classes.id}>id</th>\n            <th className={classes.table}>Mesa</th>\n            <th className={classes.price}>Precio (S/)</th>\n            <th className={classes.status}>Estado</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.orders.map((order) => (\n            <tr key={order.id} id={order.id} onClick={openOrder}>\n              <td>{order.id}</td>\n              <td>{order.table}</td>\n              <td>{order.totalPrice}</td>\n              <td>\n                <OrderStatusBar percent={order.percent} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.orderReducer.orders,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actReadOrders: (payload) => dispatch(actionCreators.readOrders(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersTable);\n","/home/juanca/dev/chicken-management/src/components/pages/Recipe/Recipe.js",["160","161","162"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./Recipe.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { families, categories } from \"../../../config/recipes.json\";\nimport { calculateSubtotals } from \"../../../utilities/calculation\";\nimport Modal from \"../../Modal/Modal\";\nimport VariableCostPicker from \"../../VariableCostPicker/VariableCostPicker\";\nimport TableTools from \"../../TableTools/TableTools\";\nimport InputField from \"../../InputField/InputField\";\nimport SelectField from \"../../SelectField/SelectField\";\nimport CheckboxField from \"../../CheckboxField/CheckboxField\";\n\nfunction Recipe(props) {\n  const history = useHistory();\n  const [showModal, setShowModal] = useState(false);\n  const [isEdit, setIsEdit] = useState(true);\n  const [isNew, setIsNew] = useState(false);\n  const [isAdvanced, setIsAdvanced] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [costIdToUpdate, setCostIdToUpdate] = useState(0);\n  const [costsData, setCostsData] = useState([]);\n  const [costsUnitSymbol, setCostsUnitSymbol] = useState([]);\n  const [costsQuantity, setCostsQuantity] = useState([]);\n  const [subtotals, setSubtotals] = useState([]);\n  const [totalCost, setTotalCost] = useState(0);\n  const [profit, setProfit] = useState(0);\n  const [profitPercent, setProfitPercent] = useState(0);\n  const [selectedItem, setSelectedItem] = useState({});\n  const [fieldsData, setFieldsData] = useState({\n    description: \"\",\n    instructions: \"\",\n    brief: \"\",\n    category: \"\",\n    family: \"\",\n    price: 0,\n    eShop: false,\n    sale: false,\n  });\n  const [validationErrors, setValidationErrors] = useState({\n    description: false,\n    category: false,\n    family: false,\n    price: false,\n  });\n\n  const onChange = (e) => {\n    let attribute = \"\";\n    if (e.target.type === \"checkbox\") {\n      attribute = \"checked\";\n    } else {\n      attribute = \"value\";\n    }\n    setFieldsData({\n      ...fieldsData,\n      [e.target.name]: e.target[attribute],\n    });\n  };\n\n  const onValidation = (name, value) => {\n    setValidationErrors({ ...validationErrors, [name]: value });\n  };\n\n  const findIndexById = useCallback(\n    (id) => {\n      return costsData.findIndex((item) => item.id == id);\n    },\n    [costsData]\n  );\n\n  const openModal = (isNewCost) => (e) => {\n    if (isNewCost) {\n      setSelectedItem(null);\n    } else {\n      const selectedIndex = findIndexById(e.currentTarget.id);\n      setSelectedItem({ \n        description: costsData[selectedIndex].description,\n        unitSymbol: costsUnitSymbol[selectedIndex],\n        quantity: costsQuantity[selectedIndex],\n      });\n      setCostIdToUpdate(e.currentTarget.id);\n    }\n    setShowModal(true);\n  };\n\n  const checkIfExist = (costDescription) => {\n    const index = costsData.findIndex(\n      (item) => item.description === costDescription\n    );\n    if (index === -1) return false;\n    return true;\n  };\n\n  const addCost = (data, unitSymbol, quantity) => {\n    if (checkIfExist(data.description)) {\n      alert(\"El ingrediente ya existe\");\n    } else {\n      setCostsData([...costsData, data]);\n      setCostsUnitSymbol([...costsUnitSymbol, unitSymbol]);\n      setCostsQuantity([...costsQuantity, quantity]);\n    }\n  };\n\n  const updateCost = (costData, costUnitSymbol, costQuantity) => {\n    const indexToUpdate = findIndexById(costIdToUpdate);\n    if (costsData[indexToUpdate].description !== costData.description) {\n      if (checkIfExist(costData.description)) {\n        alert(\"El ingrediente ya existe\");\n        return;\n      }\n    }\n    let newCostsData = [...costsData];\n    let newCostsUnitSymbol = [...costsUnitSymbol];\n    let newCostsQuantity = [...costsQuantity];\n    newCostsData[indexToUpdate] = costData;\n    newCostsUnitSymbol[indexToUpdate] = costUnitSymbol;\n    newCostsQuantity[indexToUpdate] = costQuantity;\n    setCostsData(newCostsData);\n    setCostsUnitSymbol(newCostsUnitSymbol);\n    setCostsQuantity(newCostsQuantity);\n  };\n\n  const removeCost = () => {\n    const indexToRemove = findIndexById(costIdToUpdate);\n    let newCostsData = [...costsData];\n    let newCostsUnitSymbol = [...costsUnitSymbol];\n    let newCostsQuantity = [...costsQuantity];\n    newCostsData.splice(indexToRemove, 1);\n    newCostsUnitSymbol.splice(indexToRemove, 1);\n    newCostsQuantity.splice(indexToRemove, 1);\n    setCostsData(newCostsData);\n    setCostsUnitSymbol(newCostsUnitSymbol);\n    setCostsQuantity(newCostsQuantity);\n  };\n\n  const save = () => {\n    setIsSaving(true);\n    isNew ? _create() : _update();\n  };\n\n  const _create = async () => {\n    const recipeData = { ...fieldsData };\n    const recipeCosts = {\n      costsData,\n      costsUnitSymbol,\n      costsQuantity,\n    };\n    const res = await props.actCreateRecipe({ recipeData, recipeCosts });\n    if (res.status >= 200 && res.status < 300) {\n      setIsSaving(false);\n      history.push(\"/recipes-table\");\n    }\n  };\n\n  const _update = async () => {\n    const res = await props.actUpdateRecipe({\n      recipeData: fieldsData,\n      recipeCosts: { costsData, costsUnitSymbol, costsQuantity },\n      recipes: props.recipes,\n    });\n\n    if (res.status >= 200 && res.status < 300) {\n      setIsSaving(false);\n      history.push(\"/recipes-table\");\n    }\n  };\n\n  const _delete = async () => {\n    if (!isDeleting) {\n      setIsDeleting(true);\n      const res = await props.actDeleteRecipe({\n        id: fieldsData.id,\n        recipes: props.recipes,\n      });\n      if (res.status >= 200 && res.status < 300) {\n        history.push(\"/recipes-table\");\n      } else {\n        setIsDeleting(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const { id } = props.match.params;\n    if (id === \"new\") {\n      setIsEdit(true);\n      setIsNew(true);\n      setValidationErrors({\n        description: true,\n        category: true,\n        family: true,\n        price: true,\n      });\n    } else {\n      const recipe = props.recipes.find((item) => item.id == id);\n\n      if(recipe === undefined) {\n        history.push(\"/recipes-table\")\n        return\n      }\n\n      let newFieldsData = { ...recipe };\n      delete newFieldsData.VariableCosts;\n      setFieldsData({ ...newFieldsData });\n\n      let newCostsData = [];\n      let newCostsUnitSymbol = [];\n      let newCostsQuantity = [];\n      recipe.VariableCosts.forEach((item) => {\n        newCostsUnitSymbol.push(item.RecipeCost.CostUnit);\n        newCostsQuantity.push(item.RecipeCost.CostQuantity);\n        newCostsData.push({\n          id: item.id,\n          description: item.description,\n          unitType: item.unitType,\n          unitSymbol: item.unitSymbol,\n          cost: item.cost,\n          createdAt: item.createdAt,\n          updatedAt: item.updatedAt,\n        });\n        setCostsUnitSymbol([...newCostsUnitSymbol]);\n        setCostsQuantity([...newCostsQuantity]);\n        setCostsData([...newCostsData]);\n      });\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const newSubtotals = calculateSubtotals(\n      props.variableCosts,\n      costsData,\n      costsUnitSymbol,\n      costsQuantity\n    );\n    const newTotalCost = newSubtotals.reduce(\n      (acc, value) => acc + parseFloat(value),\n      0\n    );\n    setSubtotals(newSubtotals);\n    setTotalCost(newTotalCost.toFixed(2));\n  }, [costsData, costsUnitSymbol, costsQuantity]);\n\n  useEffect(() => {\n    setProfit((fieldsData.price - totalCost).toFixed(2));\n    setProfitPercent(\n      (((fieldsData.price - totalCost) * 100) / fieldsData.price).toFixed(2)\n    );\n  }, [subtotals, totalCost, fieldsData.price]);\n\n  useEffect(() => {\n    const { description, category, family, price } = validationErrors;\n    setIsFormValid(!(description || category || family || price));\n  }, [validationErrors]);\n\n  return (\n    <div>\n      <div className={classes.container}>\n        <header>\n          <InputField\n            showLabel={false}\n            name=\"description\"\n            disabled={!isEdit}\n            placeholder=\"Ingrese el nombre de la receta...\"\n            value={fieldsData.description}\n            validations={[\"isNotEmpty\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </header>\n        <label>Ingredientes</label>\n        <TableTools openAddModal={openModal(true)} />\n        <table>\n          <thead className=\"table-header\">\n            <tr>\n              <th>id</th>\n              <th>descripcion</th>\n              <th>unidad</th>\n              <th>cantidad</th>\n              <th>subtotal</th>\n            </tr>\n          </thead>\n          <tbody>\n            {costsData.map((cost, index) => (\n              <tr key={cost.id} id={cost.id} onClick={openModal(false)}>\n                <td>{cost.id}</td>\n                <td>{cost.description}</td>\n                <td>{costsUnitSymbol[index]}</td>\n                <td>{costsQuantity[index]}</td>\n                <td>{subtotals[index]}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div className={classes.inputArea}>\n          <div className={classes.instructions}>\n            <label>Instrucciones</label>\n            <br />\n            <textarea\n              name=\"instructions\"\n              value={fieldsData.instructions}\n              disabled={!isEdit}\n              cols=\"30\"\n              rows=\"10\"\n              onChange={onChange}\n            ></textarea>\n          </div>\n          <div className={classes.brief}>\n            <label>resumen</label>\n            <br />\n            <textarea\n              name=\"brief\"\n              value={fieldsData.brief}\n              disabled={!isEdit}\n              cols=\"30\"\n              rows=\"10\"\n              onChange={onChange}\n            ></textarea>\n          </div>\n          <div className={classes.selectionArea}>\n            <div>\n              <SelectField\n                label=\"Categoría\"\n                name=\"category\"\n                disabled={!isEdit}\n                value={fieldsData.category}\n                options={categories}\n                validations={[\"isNotEmpty\"]}\n                onChange={onChange}\n                onValidation={onValidation}\n              />\n              <SelectField\n                label=\"Familia\"\n                name=\"family\"\n                disabled={!isEdit}\n                value={fieldsData.family}\n                options={families}\n                validations={[\"isNotEmpty\"]}\n                onChange={onChange}\n                onValidation={onValidation}\n              />\n              <InputField\n                label=\"Precio\"\n                name=\"price\"\n                disabled={!isEdit}\n                value={fieldsData.price}\n                min={0}\n                validations={[\"isNotEmpty\", \"isNumber\"]}\n                onChange={onChange}\n                onValidation={onValidation}\n              />\n            </div>\n            <div className={classes.checkboxArea}>\n              <CheckboxField\n                label=\"eShop\"\n                checked={fieldsData.eShop}\n                name=\"eShop\"\n                disabled={!isEdit}\n                onChange={onChange}\n              />\n              <CheckboxField\n                label=\"Oferta\"\n                checked={fieldsData.sale}\n                name=\"sale\"\n                disabled={!isEdit}\n                onChange={onChange}\n              />\n            </div>\n            <div className={classes.lastArea}>\n              <div>\n                <p>Costo: S/{totalCost}</p>\n                <p>Ganancia: S/{profit}</p>\n                <p>Margen: {profitPercent}%</p>\n              </div>\n              <div>\n                <button\n                  className=\"btn-success\"\n                  onClick={save}\n                  disabled={!isFormValid || isSaving}\n                >\n                  Guardar\n                </button>\n              </div>\n\n              {!isNew ? (\n                <div>\n                  <p\n                    className={classes.advancedBtn}\n                    onClick={() => setIsAdvanced(!isAdvanced)}\n                  >\n                    opciones avanzadas\n                  </p>\n                  {isAdvanced ? (\n                    <p className={classes.deleteBtn} onClick={_delete}>\n                      Eliminar\n                    </p>\n                  ) : null}\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Modal show={showModal} closeModal={() => setShowModal(false)}>\n        <VariableCostPicker\n          closeModal={() => setShowModal(false)}\n          addCost={addCost}\n          updateCost={updateCost}\n          removeCost={removeCost}\n          data={selectedItem}\n        />\n      </Modal>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    variableCosts: state.variableCostReducer.costs,\n    recipes: state.recipeReducer.recipes,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actCreateRecipe: (payload) =>\n      dispatch(actionCreators.createRecipe(payload)),\n    actUpdateRecipe: (payload) =>\n      dispatch(actionCreators.updateRecipe(payload)),\n    actDeleteRecipe: (payload) =>\n      dispatch(actionCreators.deleteRecipe(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipe);\n","/home/juanca/dev/chicken-management/src/components/pages/Order/Order.js",["163","164","165","166","167"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"./../../../store/actions\";\nimport { useHistory } from \"react-router\";\nimport classes from \"./Order.module.css\";\nimport Modal from \"../../Modal/Modal\";\nimport TableTools from \"../../TableTools/TableTools\";\nimport InputField from \"../../InputField/InputField\";\nimport SelectField from \"../../SelectField/SelectField\";\nimport OrderStatusBar from \"../../OrderStatusBar/OrderStatusBar\";\nimport RecipePicker from \"../../RecipePicker/RecipePicker\";\n\nfunction Order(props) {\n  const history = useHistory();\n  const [isFormValid, setIsFormValid] = useState(true)\n  const [fieldsData, setFieldsData] = useState({\n    name: \"\",\n    phone: \"\",\n    address: \"\",\n    comments: \"\",\n    table: 0,\n    discount: 0,\n    percent: 50,\n    recipesDesc: [],\n    recipesQuantities: [],\n    recipesPrices: [],\n    recipesCosts: [],\n    totalPrice: 0,\n    totalCost: 0,\n    totalProfit: 0,\n  });\n  const [recipeId, setRecipeId] = useState(0);\n  const [validationErrors, setValidationErrors] = useState({\n    name: false,\n    phone: false,\n    address: false,\n    table: false,\n    discount: false,\n    percent: false,\n  });\n  const statusOptions = [\n    \"Anulado\",\n    \"Cocina\",\n    \"En camino\",\n    \"Entregado\",\n    \"Pagado\",\n  ];\n  const statusValues = [0, 25, 50, 75, 100];\n  const [isNew, setIsNew] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === \"percent\") {\n      setFieldsData({\n        ...fieldsData,\n        [e.target.name]: parseInt(e.target.value),\n      });\n    } else {\n      setFieldsData({\n        ...fieldsData,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n\n  const onValidation = (name, value) => {\n    setValidationErrors({\n      ...validationErrors,\n      [name]: value,\n    });\n  };\n\n  const save = () => {\n    isNew ? _create() : _update();\n  };\n\n  const _create = async () => {\n    const adaptedFieldsData = adaptFieldsData();\n    const res = await props.actCreateOrder(adaptedFieldsData);\n    if (res.status >= 200 && res.status < 300) {\n      history.push(\"/orders-table\");\n    }\n  };\n\n  const _update = () => {};\n\n  const adaptFieldsData = () => {\n    return {\n      ...fieldsData,\n      recipesDesc: fieldsData.recipesDesc.join(\",\"),\n      recipesQuantities: fieldsData.recipesQuantities.join(\",\"),\n      recipesPrices: fieldsData.recipesPrices.join(\",\"),\n      recipesCosts: fieldsData.recipesCosts.join(\",\"),\n    };\n  };\n\n  useEffect(() => {\n    const { id } = props.match.params;\n    if(id === \"new\"){\n      \n    } else {\n      \n    }\n  }, []);\n\n  useEffect(() => {\n    const { description, category, family, price } = validationErrors;\n    setIsFormValid(!(description || category || family || price));\n  }, [validationErrors]);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.general_info}>Order: 4893</div>\n\n      <TableTools openAddModal={openModal} />\n      <table>\n        <thead>\n          <tr className=\"table-header\">\n            <th className={classes.table_id}>id</th>\n            <th className={classes.table_desc}>Descripción</th>\n            <th className={classes.table_quantity}>Cantidad</th>\n            <th className={classes.table_price}>Precio (S/)</th>\n            <th className={classes.table_subtotal}>Subtotal (S/)</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>1</td>\n            <td>1/4 Pollo a la brasa</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className={classes.detailed_info}>\n        <div className={classes.info_box}>\n          <InputField\n            label=\"Nombre\"\n            name=\"name\"\n            disabled={false}\n            value={fieldsData.name}\n            min={0}\n            validations={[]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n          <InputField\n            label=\"Teléfono\"\n            name=\"phone\"\n            disabled={false}\n            value={fieldsData.phone}\n            min={9}\n            validations={[]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n          <InputField\n            label=\"Dirección\"\n            name=\"address\"\n            disabled={false}\n            value={fieldsData.address}\n            min={0}\n            validations={[]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n          <label>Comentarios</label>\n          <br />\n          <textarea\n            name=\"comments\"\n            value={fieldsData.comments}\n            disabled={false}\n            rows=\"10\"\n            onChange={onChange}\n          ></textarea>\n        </div>\n        <div className={classes.info_box}>\n          <InputField\n            label=\"Mesa\"\n            name=\"table\"\n            disabled={false}\n            value={fieldsData.table}\n            min={0}\n            validations={[]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n          <InputField\n            label=\"Descuento\"\n            name=\"discount\"\n            disabled={false}\n            value={fieldsData.discount}\n            min={0}\n            validations={[]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n          <SelectField\n            label=\"Estado\"\n            name=\"percent\"\n            disabled={false}\n            value={fieldsData.percent}\n            optionValues={statusValues}\n            options={statusOptions}\n            validations={[\"isNotEmpty\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n          <div className={classes.status_bar}>\n            <OrderStatusBar percent={fieldsData.percent} />\n          </div>\n        </div>\n        <div className={classes.brief_container}>\n          <div>\n            <p className=\"mt-0\">Subtotal: S/{56.8}</p>\n            <p>Descuento: S/{0.0}</p>\n            <p>Total a pagar: S/{56.8}</p>\n          </div>\n          <div>\n            <button className=\"btn-success\" onClick={save} disabled={false}>\n              Guardar\n            </button>\n          </div>\n        </div>\n      </div>\n      <Modal show={showModal} closeModal={() => setShowModal(false)}>\n        <RecipePicker />\n      </Modal>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.orderReducer.orders,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actCreateOrder: (payload) => dispatch(actionCreators.createOrder(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);\n","/home/juanca/dev/chicken-management/src/store/reducers/fixedCostReducer.js",[],"/home/juanca/dev/chicken-management/src/store/reducers/variableCostReducer.js",[],"/home/juanca/dev/chicken-management/src/store/reducers/recipeReducer.js",[],"/home/juanca/dev/chicken-management/src/store/reducers/orderReducer.js",[],"/home/juanca/dev/chicken-management/src/store/actions/actionTypes.js",[],"/home/juanca/dev/chicken-management/src/components/HomeItem/HomeItem.js",[],"/home/juanca/dev/chicken-management/src/components/TableTools/TableTools.js",[],"/home/juanca/dev/chicken-management/src/components/Modal/Modal.js",[],"/home/juanca/dev/chicken-management/src/components/VariableCostDetail/VariableCostDetail.js",["168"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../store/actions\";\nimport classes from \"./VariableCostDetail.module.css\";\nimport close_icon from \"../../img/close_icon.svg\";\nimport { types, units } from \"../../config/units.json\";\nimport InputField from \"../InputField/InputField\";\nimport SelectField from \"../SelectField/SelectField\";\n\nfunction VariableCostDetail(props) {\n  const [isEdit, setIsEdit] = useState(false);\n  const [isNew, setIsNew] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [isAdvanced, setIsAdvanced] = useState(false);\n  const [availableUnits, setAvailableUnits] = useState([]);\n  const [detail, setDetail] = useState({\n    id: \"0\",\n    description: \"\",\n    unitType: \"\",\n    unitSymbol: \"\",\n    cost: 0,\n  });\n  const [validationErrors, setValidationErrors] = useState({\n    description: false,\n    unitType: false,\n    unitSymbol: false,\n    cost: false,\n  });\n  const [isSaving, setIsSaving] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const isMounted = useRef(false);\n  const isFirstChange = useRef(true);\n\n  const getAvailableUnits = useCallback(() => {\n    let newAvailableUnits = [];\n    units.forEach((unit) => {\n      if (unit.type === detail.unitType) {\n        newAvailableUnits.push(unit.symbol);\n      }\n    });\n    setAvailableUnits(newAvailableUnits);\n  }, [detail.unitType]);\n\n  const onChange = (e) => {\n    setDetail({\n      ...detail,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onValidation = (name, value) => {\n    setValidationErrors({\n      ...validationErrors,\n      [name]: value,\n    });\n  };\n\n  const save = () => {\n    setIsSaving(true);\n    isNew ? _create() : _update();\n  };\n\n  const _create = async () => {\n    const res = await props.actCreateVariableCost(detail);\n    if (res.status >= 200 && res.status < 300) {\n      props.closeModal();\n    } else {\n      setIsSaving(false);\n    }\n  };\n\n  const _update = async () => {\n    const res = await props.actUpdateVariableCost({\n      detail,\n      costs: props.costs,\n    });\n    if (res.status >= 200 && res.status < 300) {\n      props.closeModal();\n    } else {\n      setIsSaving(false);\n    }\n  };\n\n  const _delete = async () => {\n    if (!isDeleting) {\n      setIsDeleting(true);\n      const res = await props.actDeleteVariableCost({\n        id: detail.id,\n        costs: props.costs,\n      });\n      if (res.status >= 200 && res.status < 300) {\n        props.closeModal();\n      }\n      if (res.status === 409) {\n        const data = await res.json();\n        const recipesCount = data.recipes.length;\n        alert(\n          `El ingrediente está siendo utilizado en ${recipesCount} recetas`\n        );\n      }\n      setIsDeleting(false);\n    }\n  };\n\n  useEffect(() => {\n    let isCanceled = false;\n    if (!isCanceled) {\n      if (props.data) {\n        setDetail({ ...props.data });\n      } else {\n        setIsEdit(true);\n        setIsNew(true);\n        setValidationErrors({\n          description: true,\n          unitType: true,\n          unitSymbol: true,\n        });\n      }\n    }\n    return () => {\n      isCanceled = true; //prevent React state update on an unmounted component\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (isMounted.current) {\n      getAvailableUnits();\n      if (!isFirstChange.current) {\n        setDetail({\n          ...detail,\n          unitSymbol: \"\",\n        });\n      }\n      isFirstChange.current = false;\n    }\n  }, [detail.unitType, getAvailableUnits]);\n\n  useEffect(() => {\n    const { description, unitType, unitSymbol, cost } = validationErrors;\n    setIsFormValid(!(description || unitType || unitSymbol || cost));\n    isMounted.current = true;\n  }, [validationErrors]);\n\n  return (\n    <div className={classes.VariableCostDetail}>\n      <form>\n        <div className={classes.closeBtn}>\n          <img\n            alt=\"close\"\n            src={close_icon}\n            className={classes.closeIcon}\n            onClick={props.closeModal}\n          />\n        </div>\n        <div className={classes.idField}>\n          <h2>Id: {detail.id}</h2>\n        </div>\n        <div className={classes.descField}>\n          <InputField\n            label=\"Descripción\"\n            name=\"description\"\n            disabled={!isEdit}\n            value={detail.description}\n            minLength=\"0\"\n            maxLength=\"30\"\n            validations={[\"isNotEmpty\", \"isString\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </div>\n        <div className={classes.typeField}>\n          <SelectField\n            label=\"Medida\"\n            name=\"unitType\"\n            disabled={!isEdit}\n            value={detail.unitType}\n            options={types}\n            validations={[\"isNotEmpty\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </div>\n        <div className={classes.unitField}>\n          <SelectField\n            label=\"Unidad\"\n            name=\"unitSymbol\"\n            disabled={!isEdit}\n            value={detail.unitSymbol}\n            options={availableUnits}\n            validations={[\"isNotEmpty\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </div>\n        <div className={classes.costField}>\n          <InputField\n            type=\"number\"\n            label=\"Costo\"\n            name=\"cost\"\n            disabled={!isEdit}\n            value={detail.cost}\n            min={0}\n            validations={[\"isNumber\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </div>\n\n        {isEdit ? (\n          <React.Fragment>\n            <div className={classes.btnArea}>\n              <button\n                type=\"button\"\n                className=\"btn-success\"\n                onClick={save}\n                disabled={!isFormValid || isSaving}\n              >\n                {isSaving ? \"Guardando...\" : \"Guardar\"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn-danger\"\n                onClick={() => props.closeModal()}\n              >\n                Cancelar\n              </button>\n            </div>\n            {!isNew ? (\n              <div className={classes.advancedArea}>\n                <p\n                  className={classes.advancedBtn}\n                  onClick={() => setIsAdvanced(!isAdvanced)}\n                >\n                  opciones avanzadas\n                </p>\n                {isAdvanced ? (\n                  <p className={classes.deleteBtn} onClick={_delete}>\n                    Eliminar\n                  </p>\n                ) : null}\n              </div>\n            ) : null}\n          </React.Fragment>\n        ) : (\n          <div className={classes.btnArea}>\n            <button\n              type=\"button\"\n              className={`btn-info ${classes.btnEdit}`}\n              onClick={() => setIsEdit(true)}\n            >\n              Editar\n            </button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    costs: state.variableCostReducer.costs,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actCreateVariableCost: (payload) =>\n      dispatch(actionCreators.createVariableCost(payload)),\n    actUpdateVariableCost: (payload) =>\n      dispatch(actionCreators.updateVariableCost(payload)),\n    actDeleteVariableCost: (payload) =>\n      dispatch(actionCreators.deleteVariableCost(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VariableCostDetail);\n","/home/juanca/dev/chicken-management/src/components/OrderStatusBar/OrderStatusBar.js",["169"],"import React from \"react\";\nimport classes from \"./OrderStatusBar.module.css\";\nimport { useState, useEffect } from \"react\";\n\nexport default function OrderStatusBar(props) {\n  const [description, setDescription] = useState(\"\");\n  const [percentString, setPercentString] = useState(\"0%\");\n  const { percent } = props;\n  \n  useEffect(() => {\n    setPercentString(`${percent}%`);\n    switch (percent) {\n      case 0:\n        setDescription(\"Anulado\");\n        break;\n      case 25:\n        setDescription(\"Cocina\");\n        break;\n      case 50:\n        setDescription(\"En camino\");\n        break;\n      case 75:\n        setDescription(\"Entregado\");\n        break;\n      case 100:\n        setDescription(\"Pagado\");\n        break;\n      default:\n        setDescription(\"indefinido\");\n        break;\n    }\n  }, [props]);\n\n  return (\n    <div className={classes.OrderStatusBar}>\n      <p>{description}</p>\n      <div className={classes.bar_container}>\n        <div className={classes.bar} style={{ width: percentString }}></div>\n        <div className={classes.scale}>\n          <div>25</div>\n          <div>50</div>\n          <div>75</div>\n          <div>100</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/juanca/dev/chicken-management/src/utilities/calculation.js",[],"/home/juanca/dev/chicken-management/src/components/InputField/InputField.js",["170"],"import classes from \"./InputField.module.css\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport * as validate from \"../../utilities/validation\";\n\nexport default function InputField({\n  showLabel = true,\n  label = \"\",\n  type = \"text\",\n  name,\n  placeholder,\n  disabled = false,\n  autoComplete = \"off\",\n  minLength = -1,\n  maxLength = Infinity,\n  min = -Infinity,\n  max = Infinity,\n  value,\n  validations = [],\n  onChange,\n  onValidation,\n}) {\n  const [validationErrors, setValidationErrors] = useState([]);\n  const prevValue = useRef(\"\");\n\n  const onChangeHandler = (e) => {\n    onChange(e);\n  };\n\n  const validateErrors = useCallback(() => {\n    let errors = [];\n    let filteredErrors = [];\n    validations.forEach((validation) => {\n      switch (validation) {\n        case \"isString\":\n          errors = [\n            ...errors,\n            validate[validation](value, minLength, maxLength),\n          ];\n          break;\n\n        case \"isNumber\":\n          errors = [...errors, validate[validation](value, min, max)];\n          break;\n\n        default:\n          errors = [...errors, validate[validation](value)];\n          break;\n      }\n    });\n    filteredErrors = errors.filter((err) => err.length > 0);\n    setValidationErrors(filteredErrors);\n  }, [validations, value, minLength, maxLength, min, max]);\n\n  useEffect(() => {\n    if (value !== prevValue.current) {\n      validateErrors();\n    }\n    prevValue.current = value;\n  }, [value, validateErrors]);\n\n  useEffect(() => {\n    if (validationErrors.length > 0) {\n      onValidation(name, true);\n    } else {\n      onValidation(name, false);\n    }\n  }, [validationErrors, name]);\n\n  return (\n    <div>\n      {showLabel ? (\n        <React.Fragment>\n          <label>{label}</label>\n          <br />\n        </React.Fragment>\n      ) : null}\n      <input\n        type={type}\n        name={name}\n        minLength={minLength}\n        maxLength={maxLength}\n        min={min}\n        max={max}\n        value={value}\n        onChange={onChangeHandler}\n        disabled={disabled}\n        placeholder={placeholder}\n        autoComplete={autoComplete}\n        className={classes.inputField}\n      />\n      {validationErrors.map((error, index) => (\n        <p key={index} className=\"field-error-text\">\n          {error}\n        </p>\n      ))}\n    </div>\n  );\n}\n","/home/juanca/dev/chicken-management/src/components/SelectField/SelectField.js",["171"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport classes from \"./SelectField.module.css\";\nimport * as validate from \"../../utilities/validation\";\n\nexport default function SelectField({\n  showLabel = true,\n  label = \"\",\n  name,\n  disabled = false,\n  options = [],\n  optionValues,\n  size = 1,\n  min = -Infinity,\n  max = Infinity,\n  minLength = -1,\n  maxLength = Infinity,\n  value,\n  validations = [],\n  onChange,\n  onValidation,\n}) {\n  const [validationErrors, setValidationErrors] = useState([]);\n  const prevValue = useRef(\"\");\n\n  const onChangeHandler = (e) => {\n    onChange(e);\n  };\n\n  const validateErrors = useCallback(() => {\n    let errors = [];\n    let filteredErrors = [];\n    validations.forEach((validation) => {\n      switch (validation) {\n        case \"isString\":\n          errors = [\n            ...errors,\n            validate[validation](value, minLength, maxLength),\n          ];\n          break;\n\n        case \"isNumber\":\n          errors = [...errors, validate[validation](value, min, max)];\n          break;\n\n        default:\n          errors = [...errors, validate[validation](value)];\n          break;\n      }\n    });\n    filteredErrors = errors.filter((err) => err.length > 0);\n    setValidationErrors(filteredErrors);\n  }, [validations, value, minLength, maxLength, min, max]);\n\n  useEffect(() => {\n    if (value !== prevValue.current) {\n      validateErrors();\n    }\n    prevValue.current = value;\n  }, [value, validateErrors]);\n\n  useEffect(() => {\n    if (validationErrors.length > 0) {\n      onValidation(name, true);\n    } else {\n      onValidation(name, false);\n    }\n  }, [validationErrors, name]);\n\n  return (\n    <div>\n      {showLabel ? (\n        <React.Fragment>\n          <label>{label}</label>\n          <br />\n        </React.Fragment>\n      ) : null}\n      <select\n        name={name}\n        value={value}\n        size={size}\n        onChange={onChangeHandler}\n        disabled={disabled}\n        className={classes.selectField}\n      >\n        <option value=\"\">seleccione...</option>\n        {options.map((option, index) => (\n          <option\n            key={index}\n            value={optionValues ? optionValues[index] : options[index]}\n          >\n            {option}\n          </option>\n        ))}\n      </select>\n      {validationErrors.map((error, index) => (\n        <p key={index} className=\"field-error-text\">\n          {error}\n        </p>\n      ))}\n    </div>\n  );\n}\n","/home/juanca/dev/chicken-management/src/components/CheckboxField/CheckboxField.js",[],"/home/juanca/dev/chicken-management/src/components/RecipePicker/RecipePicker.js",["172","173","174"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\"\nimport classes from \"./RecipePicker.module.css\"\nimport InputField from \"../InputField/InputField\";\nimport SelectField from \"../SelectField/SelectField\";\n\nfunction RecipePicker(props) {\n  const [isEdit, setIsEdit] = useState(true);\n  const [filteredRecipesDesc, setFilteredRecipesDesc] = useState([])\n  const [noFilteredRecipesDesc, setNoFilteredRecipesDesc] = useState([])\n  const [fieldsData, setFieldsData] = useState({\n    filterCriteria: \"\",\n    quantity: 0\n  })\n  const isMounted = useRef(false)\n\n  const onChange = (e) => {\n    setFieldsData({\n      ...fieldsData,\n      [e.target.name]:e.target.value\n    })\n  };\n\n  const onValidation = (e) => {};\n\n  useEffect(()=>{\n    let onlyDesc = props.recipes.map(recipe => {\n      return recipe.description\n    })\n\n    setNoFilteredRecipesDesc(onlyDesc)\n    setFilteredRecipesDesc(onlyDesc)\n  },[])\n\n  useEffect(()=>{\n    if(isMounted.current){\n      let filteredValues = []\n      const regexp = new RegExp(fieldsData.filterCriteria, \"i\")\n      filteredValues = noFilteredRecipesDesc.filter((recipe)=>regexp.test(recipe))\n      setFilteredRecipesDesc(filteredValues)\n    }\n    isMounted.current = true\n  },[fieldsData.filterCriteria])\n\n  return (\n    <div>\n      <div>\n        <InputField\n          label=\"Buscar\"\n          name=\"filterCriteria\"\n          disabled={!isEdit}\n          value={fieldsData.filterCriteria}\n          onChange={onChange}\n          onValidation={onValidation}\n        />\n      </div>\n      <div>\n        <SelectField\n          showLabel={false}\n          name=\"description\"\n          disabled={!isEdit}\n          value={0}\n          options={filteredRecipesDesc}\n          size={10}\n          validations={[]}\n          onChange={onChange}\n          onValidation={onValidation}\n        />\n      </div>\n      <div>\n        <InputField\n          label=\"Cantidad\"\n          name=\"quantity\"\n          disabled={!isEdit}\n          value={fieldsData.quantity}\n          onChange={onChange}\n          onValidation={onValidation}\n        />\n      </div>\n      <div className={classes.buttonArea}>\n        <button\n          type=\"button\"\n          className=\"btn-success\"\n        >\n          Guardar\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn-danger\"\n        >\n          Cancelar\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipeReducer.recipes\n  }\n}\n\nexport default connect(mapStateToProps)(RecipePicker)","/home/juanca/dev/chicken-management/src/components/VariableCostPicker/VariableCostPicker.js",["175","176","177"],"import React, { useState, useRef, useEffect } from \"react\";\nimport classes from \"./VariableCostPicker.module.css\";\nimport { connect } from \"react-redux\";\nimport { units } from \"../../config/units.json\";\nimport InputField from \"../InputField/InputField\";\nimport SelectField from \"../SelectField/SelectField\";\n\nfunction VariableCostPicker(props) {\n  const [isEdit, setIsEdit] = useState(false);\n  const [isAdvanced, setIsAdvanced] = useState(false);\n  const [isNew, setIsNew] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [filteredCostsNames, setFilteredCostsNames] = useState([]);\n  const [noFilteredCostsNames, setNoFilteredCostsNames] = useState([]);\n  const [selectedCost, setSelectedCost] = useState({});\n  const [unitSymbols, setUnitSymbols] = useState([]);\n  const [fieldsData, setFieldsData] = useState({\n    filterCriteria: \"\",\n    description: \"\",\n    unitSymbol: \"\",\n    quantity: 1,\n  });\n  const [validationErrors, setValidationErrors] = useState({\n    description: false,\n    unitSymbol: false,\n    quantity: false,\n  });\n  const isMounted = useRef(false);\n\n  const onChange = (e) => {\n    if (e.target.name === \"description\") {\n      setFieldsData({\n        ...fieldsData,\n        unitSymbol: \"\",\n        description: e.target.value,\n      });\n      setValidationErrors({\n        ...validationErrors,\n        unitSymbol: true,\n      });\n    } else {\n      setFieldsData({\n        ...fieldsData,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n\n  const onValidation = (name, value) => {\n    setValidationErrors({\n      ...validationErrors,\n      [name]: value,\n    });\n  };\n\n  const save = () => {\n    const costData = props.variableCosts.find(\n      (cost) => cost.description === fieldsData.description\n    );\n    const costUnitSymbol = fieldsData.unitSymbol;\n    const costQuantity = fieldsData.quantity;\n\n    if (isNew) {\n      props.addCost(costData, costUnitSymbol, costQuantity);\n    } else {\n      props.updateCost(costData, costUnitSymbol, costQuantity);\n    }\n    props.closeModal();\n  };\n\n  const remove = () => {\n    props.removeCost();\n  };\n\n  useEffect(() => {\n    if (props.data) {\n      const { description, unitSymbol, quantity } = props.data;\n      setFieldsData({\n        ...fieldsData,\n        description,\n        unitSymbol,\n        quantity,\n      });\n    } else {\n      setIsNew(true);\n      setIsEdit(true);\n      setValidationErrors({\n        description: true,\n        unitSymbol: true,\n        quantity: true,\n      });\n    }\n    let onlyNames = props.variableCosts.map((item) => {\n      return item.description;\n    });\n    setFilteredCostsNames(onlyNames);\n    setNoFilteredCostsNames(onlyNames);\n  }, []);\n\n  useEffect(() => {\n    const selectedItem = props.variableCosts.find(\n      (item) => item.description === fieldsData.description\n    );\n    setSelectedCost(selectedItem);\n  }, [fieldsData.description]);\n\n  useEffect(() => {\n    if (selectedCost) {\n      const availableUnits = [];\n      units.forEach((unit) => {\n        if (unit.type === selectedCost.unitType) {\n          availableUnits.push(unit.symbol);\n        }\n      });\n      setUnitSymbols(availableUnits);\n    }\n  }, [selectedCost]);\n\n  useEffect(() => {\n    const { description, unitSymbol, quantity } = validationErrors;\n    setIsFormValid(!(description || unitSymbol || quantity));\n  }, [validationErrors]);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const regexp = new RegExp(fieldsData.filterCriteria, \"i\");\n      let filteredValues = noFilteredCostsNames.filter((item) =>\n        regexp.test(item)\n      );\n      setFilteredCostsNames(filteredValues);\n    }\n    isMounted.current = true;\n  }, [fieldsData.filterCriteria]);\n\n  return (\n    <div className={classes.container}>\n      <form>\n        <div className={classes.costFilter}>\n          <InputField\n            label=\"Buscar\"\n            name=\"filterCriteria\"\n            disabled={!isEdit}\n            value={fieldsData.filterCriteria}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </div>\n        <div className={classes.costList}>\n          <SelectField\n            showLabel={false}\n            name=\"description\"\n            disabled={!isEdit}\n            value={fieldsData.description}\n            options={filteredCostsNames}\n            size={10}\n            validations={[\"isNotEmpty\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </div>\n\n        <div>\n          <SelectField\n            label=\"Unidad\"\n            name=\"unitSymbol\"\n            disabled={!isEdit}\n            value={fieldsData.unitSymbol}\n            options={unitSymbols}\n            validations={[\"isNotEmpty\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </div>\n\n        <div>\n          <InputField\n            type=\"number\"\n            label=\"Cantidad\"\n            name=\"quantity\"\n            disabled={!isEdit}\n            value={fieldsData.quantity}\n            min={0}\n            validations={[\"isNumber\"]}\n            onChange={onChange}\n            onValidation={onValidation}\n          />\n        </div>\n\n        {isFormValid ? (\n          <div className={classes.brief}>\n            <p>{`${fieldsData.quantity}${fieldsData.unitSymbol} de ${fieldsData.description}`}</p>\n          </div>\n        ) : null}\n\n        {isEdit ? (\n          <React.Fragment>\n            <div>\n              <button\n                type=\"button\"\n                className=\"btn-success\"\n                disabled={!isFormValid}\n                onClick={save}\n              >\n                Guardar\n              </button>\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                className=\"btn-danger\"\n                onClick={() => props.closeModal()}\n              >\n                Cancelar\n              </button>\n            </div>\n            {!isNew ? (\n              <div className={classes.advancedArea}>\n                <p\n                  className={classes.advancedBtn}\n                  onClick={() => setIsAdvanced(!isAdvanced)}\n                >\n                  opciones avanzadas\n                </p>\n                {isAdvanced ? (\n                  <p className={classes.deleteBtn} onClick={remove}>\n                    Eliminar\n                  </p>\n                ) : null}\n              </div>\n            ) : null}\n          </React.Fragment>\n        ) : (\n          <div className={classes.btnEditArea}>\n            <button\n              type=\"button\"\n              className=\"btn-info\"\n              onClick={() => {\n                setIsEdit(true);\n              }}\n            >\n              Editar\n            </button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    variableCosts: state.variableCostReducer.costs,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VariableCostPicker);\n","/home/juanca/dev/chicken-management/src/store/actions/index.js",[],"/home/juanca/dev/chicken-management/src/utilities/validation.js",[],"/home/juanca/dev/chicken-management/src/store/actions/fixedCostActions.js",[],"/home/juanca/dev/chicken-management/src/store/actions/variableCostActions.js",[],["178","179"],"/home/juanca/dev/chicken-management/src/store/actions/recipeActions.js",[],"/home/juanca/dev/chicken-management/src/store/actions/orderActions.js",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":13},{"ruleId":"188","severity":1,"message":"189","line":9,"column":6,"nodeType":"190","endLine":9,"endColumn":8,"suggestions":"191"},{"ruleId":"188","severity":1,"message":"192","line":48,"column":6,"nodeType":"190","endLine":48,"endColumn":8,"suggestions":"193"},{"ruleId":"184","severity":1,"message":"194","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"195","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":18},{"ruleId":"188","severity":1,"message":"189","line":20,"column":6,"nodeType":"190","endLine":20,"endColumn":8,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":69,"column":52,"nodeType":"199","messageId":"200","endLine":69,"endColumn":54},{"ruleId":"197","severity":1,"message":"198","line":198,"column":59,"nodeType":"199","messageId":"200","endLine":198,"endColumn":61},{"ruleId":"188","severity":1,"message":"201","line":244,"column":6,"nodeType":"190","endLine":244,"endColumn":49,"suggestions":"202"},{"ruleId":"184","severity":1,"message":"203","line":15,"column":10,"nodeType":"186","messageId":"187","endLine":15,"endColumn":21},{"ruleId":"184","severity":1,"message":"204","line":32,"column":10,"nodeType":"186","messageId":"187","endLine":32,"endColumn":18},{"ruleId":"184","severity":1,"message":"205","line":32,"column":20,"nodeType":"186","messageId":"187","endLine":32,"endColumn":31},{"ruleId":"184","severity":1,"message":"206","line":49,"column":17,"nodeType":"186","messageId":"187","endLine":49,"endColumn":25},{"ruleId":"188","severity":1,"message":"207","line":108,"column":6,"nodeType":"190","endLine":108,"endColumn":8,"suggestions":"208"},{"ruleId":"188","severity":1,"message":"209","line":136,"column":6,"nodeType":"190","endLine":136,"endColumn":42,"suggestions":"210"},{"ruleId":"188","severity":1,"message":"211","line":32,"column":6,"nodeType":"190","endLine":32,"endColumn":13,"suggestions":"212"},{"ruleId":"188","severity":1,"message":"213","line":67,"column":6,"nodeType":"190","endLine":67,"endColumn":30,"suggestions":"214"},{"ruleId":"188","severity":1,"message":"213","line":67,"column":6,"nodeType":"190","endLine":67,"endColumn":30,"suggestions":"215"},{"ruleId":"184","severity":1,"message":"216","line":8,"column":18,"nodeType":"186","messageId":"187","endLine":8,"endColumn":27},{"ruleId":"188","severity":1,"message":"217","line":33,"column":5,"nodeType":"190","endLine":33,"endColumn":7,"suggestions":"218"},{"ruleId":"188","severity":1,"message":"219","line":43,"column":5,"nodeType":"190","endLine":43,"endColumn":32,"suggestions":"220"},{"ruleId":"188","severity":1,"message":"221","line":98,"column":6,"nodeType":"190","endLine":98,"endColumn":8,"suggestions":"222"},{"ruleId":"188","severity":1,"message":"201","line":105,"column":6,"nodeType":"190","endLine":105,"endColumn":30,"suggestions":"223"},{"ruleId":"188","severity":1,"message":"224","line":133,"column":6,"nodeType":"190","endLine":133,"endColumn":33,"suggestions":"225"},{"ruleId":"180","replacedBy":"226"},{"ruleId":"182","replacedBy":"227"},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["230"],"React Hook useEffect has a missing dependency: 'calculateCostsAndProfits'. Either include it or remove the dependency array.",["231"],"'useEffect' is defined but never used.","'useState' is defined but never used.",["232"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.variableCosts'. Either include it or remove the dependency array.",["233"],"'isFormValid' is assigned a value but never used.","'recipeId' is assigned a value but never used.","'setRecipeId' is assigned a value but never used.","'setIsNew' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params'. Either include it or remove the dependency array.",["234"],"React Hook useEffect has a missing dependency: 'detail'. Either include it or remove the dependency array. You can also do a functional update 'setDetail(d => ...)' if you only need 'detail' in the 'setDetail' call.",["235"],"React Hook useEffect has a missing dependency: 'percent'. Either include it or remove the dependency array.",["236"],"React Hook useEffect has a missing dependency: 'onValidation'. Either include it or remove the dependency array. If 'onValidation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["237"],["238"],"'setIsEdit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.recipes'. Either include it or remove the dependency array.",["239"],"React Hook useEffect has a missing dependency: 'noFilteredRecipesDesc'. Either include it or remove the dependency array.",["240"],"React Hook useEffect has missing dependencies: 'fieldsData', 'props.data', and 'props.variableCosts'. Either include them or remove the dependency array. You can also do a functional update 'setFieldsData(f => ...)' if you only need 'fieldsData' in the 'setFieldsData' call.",["241"],["242"],"React Hook useEffect has a missing dependency: 'noFilteredCostsNames'. Either include it or remove the dependency array.",["243"],["228"],["229"],"no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"244","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"257","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [props]",{"range":"270","text":"271"},"Update the dependencies array to be: [calculateCostsAndProfits]",{"range":"272","text":"273"},{"range":"274","text":"271"},"Update the dependencies array to be: [costsData, costsUnitSymbol, costsQuantity, props.variableCosts]",{"range":"275","text":"276"},"Update the dependencies array to be: [props.match.params]",{"range":"277","text":"278"},"Update the dependencies array to be: [detail, detail.unitType, getAvailableUnits]",{"range":"279","text":"280"},"Update the dependencies array to be: [percent, props]",{"range":"281","text":"282"},"Update the dependencies array to be: [validationErrors, name, onValidation]",{"range":"283","text":"284"},{"range":"285","text":"284"},"Update the dependencies array to be: [props.recipes]",{"range":"286","text":"287"},"Update the dependencies array to be: [fieldsData.filterCriteria, noFilteredRecipesDesc]",{"range":"288","text":"289"},"Update the dependencies array to be: [fieldsData, props.data, props.variableCosts]",{"range":"290","text":"291"},"Update the dependencies array to be: [fieldsData.description, props.variableCosts]",{"range":"292","text":"293"},"Update the dependencies array to be: [fieldsData.filterCriteria, noFilteredCostsNames]",{"range":"294","text":"295"},[250,252],"[props]",[1350,1352],"[calculateCostsAndProfits]",[618,620],[7501,7544],"[costsData, costsUnitSymbol, costsQuantity, props.variableCosts]",[2721,2723],"[props.match.params]",[3593,3629],"[detail, detail.unitType, getAvailableUnits]",[804,811],"[percent, props]",[1644,1668],"[validationErrors, name, onValidation]",[1634,1658],[941,943],"[props.recipes]",[1252,1279],"[fieldsData.filterCriteria, noFilteredRecipesDesc]",[2696,2698],"[fieldsData, props.data, props.variableCosts]",[2880,2904],"[fieldsData.description, props.variableCosts]",[3676,3703],"[fieldsData.filterCriteria, noFilteredCostsNames]"]